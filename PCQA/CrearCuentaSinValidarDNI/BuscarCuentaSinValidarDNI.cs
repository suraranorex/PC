///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PCQA.CrearCuentaSinValidarDNI
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BuscarCuentaSinValidarDNI recording.
    /// </summary>
    [TestModule("d8ff6eaa-5aea-464c-a14e-a23960ad79b1", ModuleType.Recording, 1)]
    public partial class BuscarCuentaSinValidarDNI : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PCQA.PCQARepository repository.
        /// </summary>
        public static global::PCQA.PCQARepository repo = global::PCQA.PCQARepository.Instance;

        static BuscarCuentaSinValidarDNI instance = new BuscarCuentaSinValidarDNI();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BuscarCuentaSinValidarDNI()
        {
            Name = "pruebauno";
            LastName = "cuenta";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BuscarCuentaSinValidarDNI Instance
        {
            get { return instance; }
        }

#region Variables

        string _Name;

        /// <summary>
        /// Gets or sets the value of variable Name.
        /// </summary>
        [TestVariable("89ca50ca-cfb0-445e-abf0-154fd6d50669")]
        public string Name
        {
            get { return _Name; }
            set { _Name = value; }
        }

        string _LastName;

        /// <summary>
        /// Gets or sets the value of variable LastName.
        /// </summary>
        [TestVariable("8acf9141-312b-44bb-b919-8c423a652204")]
        public string LastName
        {
            get { return _LastName; }
            set { _LastName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("6220ee55-3dcc-4717-9260-d89ec7bc2052")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // **** Ingresar Información de la Cuenta ****
            Report.Log(ReportLevel.Info, "Section", "**** Ingresar Información de la Cuenta ****", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.Btn_Cuenta'", repo.SURA.Btn_CuentaInfo, new ActionTimeout(30000), new RecordItemIndex(1));
            repo.SURA.Btn_CuentaInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Btn_Cuenta' at CenterRight.", repo.SURA.Btn_CuentaInfo, new RecordItemIndex(2));
            repo.SURA.Btn_Cuenta.Click(Location.CenterRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Btn_NuevaCuenta1' at 46;11.", repo.SURA.Btn_NuevaCuenta1Info, new RecordItemIndex(3));
            repo.SURA.Btn_NuevaCuenta1.Click("46;11");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txt_Nombre' at 78;15.", repo.SURA.txt_NombreInfo, new RecordItemIndex(4));
            repo.SURA.txt_Nombre.Click("78;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Name' with focus on 'SURA.txt_Nombre'.", repo.SURA.txt_NombreInfo, new RecordItemIndex(5));
            repo.SURA.txt_Nombre.PressKeys(Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Name, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.IngresarInformacionDeLaCuenta' at 285;15.", repo.SURA.IngresarInformacionDeLaCuentaInfo, new RecordItemIndex(7));
            repo.SURA.IngresarInformacionDeLaCuenta.Click("285;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txt_Nombre'", repo.SURA.Copy_of_txt_NombreInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.SURA.Copy_of_txt_NombreInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txt_Apellido' at 74;10.", repo.SURA.txt_ApellidoInfo, new RecordItemIndex(9));
            repo.SURA.txt_Apellido.Click("74;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LastName' with focus on 'SURA.txt_Apellido'.", repo.SURA.txt_ApellidoInfo, new RecordItemIndex(10));
            repo.SURA.txt_Apellido.EnsureVisible();
            Keyboard.Press(LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", LastName, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.IngresarInformacionDeLaCuenta' at 285;15.", repo.SURA.IngresarInformacionDeLaCuentaInfo, new RecordItemIndex(12));
            repo.SURA.IngresarInformacionDeLaCuenta.Click("285;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txt_Apellido'", repo.SURA.Copy_of_txt_ApellidoInfo, new ActionTimeout(30000), new RecordItemIndex(13));
            repo.SURA.Copy_of_txt_ApellidoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.Btn_CrearCuentaNueva'", repo.SURA.Btn_CrearCuentaNuevaInfo, new ActionTimeout(30000), new RecordItemIndex(14));
            repo.SURA.Btn_CrearCuentaNuevaInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Btn_CrearCuentaNueva' at 93;10.", repo.SURA.Btn_CrearCuentaNuevaInfo, new RecordItemIndex(15));
            repo.SURA.Btn_CrearCuentaNueva.Click("93;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Personal' at 45;12.", repo.SURA.PersonalInfo, new RecordItemIndex(16));
            repo.SURA.Personal.Click("45;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bl_CrearCuenta' at 91;12.", repo.SURA.bl_CrearCuentaInfo, new RecordItemIndex(17));
            repo.SURA.bl_CrearCuenta.Click("91;12");
            Delay.Milliseconds(0);
            
            // **** Validación a próxima ventana - Cargar Datos de la Cuenta ****
            Report.Log(ReportLevel.Info, "Section", "**** Validación a próxima ventana - Cargar Datos de la Cuenta ****", new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Crear cuenta') on item 'SURA.bl_CrearCuenta'.", repo.SURA.bl_CrearCuentaInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.SURA.bl_CrearCuentaInfo, "InnerText", "Crear cuenta");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.bl_CrearCuenta'", repo.SURA.bl_CrearCuentaInfo, new ActionTimeout(30000), new RecordItemIndex(20));
            //repo.SURA.bl_CrearCuentaInfo.WaitForExists(30000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
