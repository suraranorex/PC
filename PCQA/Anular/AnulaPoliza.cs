///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PCQA.Anular
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AnulaPoliza recording.
    /// </summary>
    [TestModule("7255da00-480d-461c-a448-6c665cc6ccdc", ModuleType.Recording, 1)]
    public partial class AnulaPoliza : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PCQA.PCQARepository repository.
        /// </summary>
        public static global::PCQA.PCQARepository repo = global::PCQA.PCQARepository.Instance;

        static AnulaPoliza instance = new AnulaPoliza();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AnulaPoliza()
        {
            NumeroTransaccion = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AnulaPoliza Instance
        {
            get { return instance; }
        }

#region Variables

        string _NumeroTransaccion;

        /// <summary>
        /// Gets or sets the value of variable NumeroTransaccion.
        /// </summary>
        [TestVariable("fb75159b-884f-4325-8756-4d5741544595")]
        public string NumeroTransaccion
        {
            get { return _NumeroTransaccion; }
            set { _NumeroTransaccion = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("6220ee55-3dcc-4717-9260-d89ec7bc2052")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable OpcionMotivo.
        /// </summary>
        [TestVariable("b25db5d0-a417-43d3-be0e-d5e60e58e9ba")]
        public string OpcionMotivo
        {
            get { return repo.OpcionMotivo; }
            set { repo.OpcionMotivo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.bttn_Nuevo' at Center.", repo.SURA.Anulacion_Rehabilitacion.bttn_NuevoInfo, new RecordItemIndex(0));
            repo.SURA.Anulacion_Rehabilitacion.bttn_Nuevo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.bttn_AnularPoliza' at Center.", repo.SURA.Anulacion_Rehabilitacion.bttn_AnularPolizaInfo, new RecordItemIndex(1));
            repo.SURA.Anulacion_Rehabilitacion.bttn_AnularPoliza.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.txt_IniciarAnulacion'", repo.SURA.Anulacion_Rehabilitacion.txt_IniciarAnulacionInfo, new ActionTimeout(20000), new RecordItemIndex(2));
            repo.SURA.Anulacion_Rehabilitacion.txt_IniciarAnulacionInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.txtbox_Fuente' at Center.", repo.SURA.Anulacion_Rehabilitacion.txtbox_FuenteInfo, new RecordItemIndex(3));
            repo.SURA.Anulacion_Rehabilitacion.txtbox_Fuente.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.option_Asegurado'", repo.SURA.Anulacion_Rehabilitacion.option_AseguradoInfo, new ActionTimeout(5000), new RecordItemIndex(4));
            repo.SURA.Anulacion_Rehabilitacion.option_AseguradoInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.option_Asegurado' at Center.", repo.SURA.Anulacion_Rehabilitacion.option_AseguradoInfo, new RecordItemIndex(5));
            repo.SURA.Anulacion_Rehabilitacion.option_Asegurado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to not exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_Fuente'", repo.SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_FuenteInfo, new ActionTimeout(10000), new RecordItemIndex(6));
            repo.SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_FuenteInfo.WaitForNotExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.txtbox_Motivo' at Center.", repo.SURA.Anulacion_Rehabilitacion.txtbox_MotivoInfo, new RecordItemIndex(7));
            repo.SURA.Anulacion_Rehabilitacion.txtbox_Motivo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 7s to exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimiento'", repo.SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimientoInfo, new ActionTimeout(7000), new RecordItemIndex(8));
            repo.SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimientoInfo.WaitForExists(7000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimiento' at Center.", repo.SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimientoInfo, new RecordItemIndex(9));
            repo.SURA.Anulacion_Rehabilitacion.option_AnulacionPorDesistimiento.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to not exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_Motivo'", repo.SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_MotivoInfo, new ActionTimeout(10000), new RecordItemIndex(10));
            repo.SURA.Anulacion_Rehabilitacion.Copy_of_txtbox_MotivoInfo.WaitForNotExists(10000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.bttn_IniciarAnulacion' at Center.", repo.SURA.Anulacion_Rehabilitacion.bttn_IniciarAnulacionInfo, new RecordItemIndex(12));
            repo.SURA.Anulacion_Rehabilitacion.bttn_IniciarAnulacion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'SURA.Anulacion_Rehabilitacion.txt_Confirmacion'", repo.SURA.Anulacion_Rehabilitacion.txt_ConfirmacionInfo, new ActionTimeout(10000), new RecordItemIndex(13));
            repo.SURA.Anulacion_Rehabilitacion.txt_ConfirmacionInfo.WaitForExists(10000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Anulacion_Rehabilitacion.bttn_AnularAhora' at Center.", repo.SURA.Anulacion_Rehabilitacion.bttn_AnularAhoraInfo, new RecordItemIndex(15));
            repo.SURA.Anulacion_Rehabilitacion.bttn_AnularAhora.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Aceptar' at Center.", repo.SURA.bttn_AceptarInfo, new RecordItemIndex(16));
            repo.SURA.bttn_Aceptar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Anulación Contratada') on item 'SURA.Anulacion_Rehabilitacion.txt_AnulacionContratada'.", repo.SURA.Anulacion_Rehabilitacion.txt_AnulacionContratadaInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.SURA.Anulacion_Rehabilitacion.txt_AnulacionContratadaInfo, "InnerText", "Anulación Contratada");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'SURA.Anulacion_Rehabilitacion.txt_NroAnulacion' and assigning the part of its value captured by '[0-9]{10}' to variable 'NumeroTransaccion'.", repo.SURA.Anulacion_Rehabilitacion.txt_NroAnulacionInfo, new RecordItemIndex(18));
            NumeroTransaccion = repo.SURA.Anulacion_Rehabilitacion.txt_NroAnulacion.Element.GetAttributeValueText("InnerText", new Regex("[0-9]{10}"));
            Delay.Milliseconds(0);
            
            // El número de transacción es
            Report.Log(ReportLevel.Info, "Section", "El número de transacción es", new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "User", NumeroTransaccion, new RecordItemIndex(20));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
