///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PCQA.Anular
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BuscaPoliza recording.
    /// </summary>
    [TestModule("3979a088-f87a-4eda-916c-6ac51b54dd9b", ModuleType.Recording, 1)]
    public partial class BuscaPoliza : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PCQA.PCQARepository repository.
        /// </summary>
        public static global::PCQA.PCQARepository repo = global::PCQA.PCQARepository.Instance;

        static BuscaPoliza instance = new BuscaPoliza();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BuscaPoliza()
        {
            NroPoliza = "04440024094";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BuscaPoliza Instance
        {
            get { return instance; }
        }

#region Variables

        string _NroPoliza;

        /// <summary>
        /// Gets or sets the value of variable NroPoliza.
        /// </summary>
        [TestVariable("f0db9452-0944-4978-8304-7c0d7ba30ca3")]
        public string NroPoliza
        {
            get { return _NroPoliza; }
            set { _NroPoliza = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("6220ee55-3dcc-4717-9260-d89ec7bc2052")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_MenuPoliza' at CenterRight.", repo.SURA.bttn_MenuPolizaInfo, new RecordItemIndex(0));
            repo.SURA.bttn_MenuPoliza.Click(Location.CenterRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txtbox_NumPoliza' at Center.", repo.SURA.txtbox_NumPolizaInfo, new RecordItemIndex(1));
            repo.SURA.txtbox_NumPoliza.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NroPoliza' with focus on 'SURA.txtbox_NumPoliza'.", repo.SURA.txtbox_NumPolizaInfo, new RecordItemIndex(2));
            repo.SURA.txtbox_NumPoliza.PressKeys(NroPoliza);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SURA.txtbox_NumPoliza'.", repo.SURA.txtbox_NumPolizaInfo, new RecordItemIndex(3));
            repo.SURA.txtbox_NumPoliza.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.txt_InformacionDePoliza'", repo.SURA.txt_InformacionDePolizaInfo, new ActionTimeout(30000), new RecordItemIndex(4));
            repo.SURA.txt_InformacionDePolizaInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
