///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PCQA.Login
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("570f2e8a-441d-44b3-8154-9f41958b5f14", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PCQA.PCQARepository repository.
        /// </summary>
        public static global::PCQA.PCQARepository repo = global::PCQA.PCQARepository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            Usuario = "su";
            Contrasenia = "silverarrow";
            Ambiente = "i-gestion-ssur-oci.opc.oracleoutsourcing.com";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        string _Usuario;

        /// <summary>
        /// Gets or sets the value of variable Usuario.
        /// </summary>
        [TestVariable("4634ac89-0e8c-40f5-beee-c2e85cdc9c19")]
        public string Usuario
        {
            get { return _Usuario; }
            set { _Usuario = value; }
        }

        string _Contrasenia;

        /// <summary>
        /// Gets or sets the value of variable Contrasenia.
        /// </summary>
        [TestVariable("73e07acd-5c08-45d2-ab32-1efdcf6fa2f0")]
        public string Contrasenia
        {
            get { return _Contrasenia; }
            set { _Contrasenia = value; }
        }

        string _Ambiente;

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("6220ee55-3dcc-4717-9260-d89ec7bc2052")]
        public string Ambiente
        {
            get { return _Ambiente; }
            set { _Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // **** Ingreso de usuario y clave ****
            Report.Log(ReportLevel.Info, "Section", "**** Ingreso de usuario y clave ****", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txt_User' at 38;15.", repo.SURA.txt_UserInfo, new RecordItemIndex(1));
            repo.SURA.txt_User.Click("38;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.txt_User'.", repo.SURA.txt_UserInfo, new RecordItemIndex(2));
            repo.SURA.txt_User.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Usuario' with focus on 'SURA.txt_User'.", repo.SURA.txt_UserInfo, new RecordItemIndex(3));
            repo.SURA.txt_User.PressKeys(Usuario);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txt_password' at 27;7.", repo.SURA.txt_passwordInfo, new RecordItemIndex(4));
            repo.SURA.txt_password.Click("27;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.txt_password'.", repo.SURA.txt_passwordInfo, new RecordItemIndex(5));
            repo.SURA.txt_password.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Contrasenia' with focus on 'SURA.txt_password'.", repo.SURA.txt_passwordInfo, new RecordItemIndex(6));
            repo.SURA.txt_password.PressKeys(Contrasenia);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Btn_LogIn' at 23;5.", repo.SURA.Btn_LogInInfo, new RecordItemIndex(7));
            repo.SURA.Btn_LogIn.Click("23;5");
            Delay.Milliseconds(0);
            
            // **** Validación de Login Exitoso ****
            Report.Log(ReportLevel.Info, "Section", "**** Validación de Login Exitoso ****", new RecordItemIndex(8));
            
            //Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(9));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Mis actividades') on item 'SURA.Validate_MisActividades'.", repo.SURA.Validate_MisActividadesInfo, new RecordItemIndex(10));
            //Validate.AttributeEqual(repo.SURA.Validate_MisActividadesInfo, "InnerText", "Mis actividades");
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
