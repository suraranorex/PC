///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PCQA.Rehabilitar
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Rehabilitar recording.
    /// </summary>
    [TestModule("40d80169-c6e6-47fe-a50b-2dcb305f9f8d", ModuleType.Recording, 1)]
    public partial class Rehabilitar : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PCQA.PCQARepository repository.
        /// </summary>
        public static global::PCQA.PCQARepository repo = global::PCQA.PCQARepository.Instance;

        static Rehabilitar instance = new Rehabilitar();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Rehabilitar()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Rehabilitar Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("6220ee55-3dcc-4717-9260-d89ec7bc2052")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Nuevo' at 51;13.", repo.ApplicationUnderTest.NuevoInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Nuevo.Click("51;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.RehabilitarPoliza' at 71;8.", repo.ApplicationUnderTest.RehabilitarPolizaInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.RehabilitarPoliza.Click("71;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ClickMotivo2' at 9;4.", repo.ApplicationUnderTest.ClickMotivo2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.ClickMotivo2.Click("9;4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'otro' with focus on 'ApplicationUnderTest.ClickMotivo2'.", repo.ApplicationUnderTest.ClickMotivo2Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.ClickMotivo2.EnsureVisible();
            Keyboard.Press("otro");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.ClickMotivo2'.", repo.ApplicationUnderTest.ClickMotivo2Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.ClickMotivo2.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ClickMotivo' at 9;9.", repo.ApplicationUnderTest.ClickMotivoInfo, new RecordItemIndex(5));
            //repo.ApplicationUnderTest.ClickMotivo.Click("9;9");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Otro' at 81;9.", repo.ApplicationUnderTest.OtroInfo, new RecordItemIndex(6));
            //repo.ApplicationUnderTest.Otro.Click("81;9");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.lbl_GrupoDeAfinidad' at 563;19.", repo.ApplicationUnderTest.lbl_GrupoDeAfinidadInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.lbl_GrupoDeAfinidad.Click("563;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ReCotiar1' at Center.", repo.ApplicationUnderTest.ReCotiar1Info, new RecordItemIndex(8));
            repo.ApplicationUnderTest.ReCotiar1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Ehabilitar1' at Center.", repo.ApplicationUnderTest.Ehabilitar1Info, new RecordItemIndex(9));
            repo.ApplicationUnderTest.Ehabilitar1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Aceptar' at Center.", repo.ApplicationUnderTest.AceptarInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Aceptar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Rehabilitación Contratada') on item 'ApplicationUnderTest.RehabilitacionContratada'.", repo.ApplicationUnderTest.RehabilitacionContratadaInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.RehabilitacionContratadaInfo, "InnerText", "Rehabilitación Contratada");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 7s.", new RecordItemIndex(12));
            Delay.Duration(7000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
